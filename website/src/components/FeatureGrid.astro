---
export interface FeatureLink {
	href: string;
	title: string;
	description: string;
	icon: string;
	color: string;
}

export interface Props {
	title: string;
	description?: string;
	features: FeatureLink[];
}

const { title, description, features } = Astro.props;
---

<section class="bg-gray-900/50 px-6 py-16 sm:px-8 lg:px-16">
	<div class="mx-auto max-w-6xl">
		<h2 class="mb-12 text-center text-3xl font-bold text-white">{title}</h2>
		{
			description && (
				<p class="mb-12 text-center text-xl text-gray-300">{description}</p>
			)
		}
		<div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
			{
				features.map((feature) => (
					<a
						href={feature.href}
						class={`group rounded-xl border border-gray-700 bg-gray-800/50 p-6 backdrop-blur transition-all hover:border-${feature.color}-500/50 hover:bg-gray-800`}
					>
						<div
							class={`mb-4 inline-flex h-12 w-12 items-center justify-center rounded-lg bg-${feature.color}-500/10 text-${feature.color}-400`}
						>
							<svg
								class="h-6 w-6"
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d={feature.icon}
								/>
							</svg>
						</div>
						<h3
							class={`mb-3 text-xl font-semibold text-white group-hover:text-${feature.color}-400 transition-colors`}
						>
							{feature.title}
						</h3>
						<p class="text-gray-300">{feature.description}</p>
					</a>
				))
			}
		</div>
	</div>
</section>
